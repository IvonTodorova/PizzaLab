@using PizzaLab.Data.Models.Enums
@model PizzaLab.Web.ViewModels.Orders.OrderViewModel

@{
    this.ViewData["Title"] = "Order Details";
}

<div class="text-center">
    <small class="text-muted">Order number: @Model.Id</small>
    <hr />
    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">Product</th>
                <th scope="col">Quantity</th>
                <th scope="col">Price</th>
                <th scope="col">Total price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var purchase in Model.Purchases)
            {
                purchase.Price = purchase.TotalPrice / purchase.Quantity;
                <tr>
                    <td>@purchase.Product.Name</td>
                    <td>@purchase.Quantity</td>
                    <td>@purchase.Price</td>
                    <td>@purchase.TotalPrice</td>
                </tr>

            }
            <div>
                <span>Added Ingredients</span>
                <table id="options">
                    @foreach (var purchase in Model.Purchases)
                    {

                        @for (int i = 0; i < purchase.AddedOptionalIngredients.Count; i++)
                        {
                            if (purchase.AddedOptionalIngredients[i].DischargedUnits > 0)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => purchase.AddedOptionalIngredients[i].Ingridient.Name)
                                    </td>
                                    <td>
                                        <span>
                                            @Html.DisplayFor(modelItem => purchase.AddedOptionalIngredients[i].DischargedUnits)
                                        </span>
                                        <span>x</span>
                                    </td>

                                    <td>
                                        <span>
                                            @Html.DisplayFor(modelItem => purchase.AddedOptionalIngredients[i].Ingridient.PricePerUnit)
                                        </span>
                                        <span>$</span>
                                    </td>
                                </tr>
                            }
                        }
                    }
                </table>

            <tr>
                <th scope="row" colspan="3" class="text-right">Total: </th>
                <th scope="row">@Model.TotalPrice</th>
            </tr>
</div>

        </tbody>
    </table>
    <div class="text-center">
        <p>
            <a role="button" class="btn btn-outline-secondary"
               href="/Identity/Account/Manage/Orders">
                View orders
            </a>
        </p>
        <p>
            <a role="button" class="btn btn-outline-secondary"
               asp-controller="Home" asp-action="Index">
                Go to the Home page
            </a>
        </p>
        <hr />
        @*@if (Model.OrderStatus.Status == OrderStatusEnum.Processing.ToString())
            {*@
        <a role="button" class="btn btn-danger"
           asp-controller="Orders" asp-action="CancelOrder" asp-route-orderId="@Model.Id">Cancel order</a>
        @*}*@


    </div>

    <div style="width:150px;height:40px">
        <p>
            <a role="button" class="btn btn-outline-secondary"
               asp-controller="Orders" asp-action="CreateDocument" asp-route-orderId="@Model.Id">
                Create Document
            </a>
        </p>
    </div>

</div>